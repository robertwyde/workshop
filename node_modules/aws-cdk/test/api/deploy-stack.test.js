"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lib_1 = require("../../lib");
const util_1 = require("../util");
const mock_sdk_1 = require("../util/mock-sdk");
const FAKE_STACK = util_1.testStack({
    stackName: 'withouterrors',
    template: { resource: 'noerrorresource' },
});
test('do deploy executable change set with 0 changes', async () => {
    // GIVEN
    const sdk = new mock_sdk_1.MockSDK();
    let executed = false;
    sdk.stubCloudFormation({
        describeStacks() {
            return {
                Stacks: []
            };
        },
        createChangeSet() {
            return {};
        },
        describeChangeSet() {
            return {
                Status: 'CREATE_COMPLETE',
                Changes: [],
            };
        },
        executeChangeSet() {
            executed = true;
            return {};
        }
    });
    // WHEN
    const ret = await lib_1.deployStack({
        stack: FAKE_STACK,
        sdk,
    });
    // THEN
    expect(ret.noOp).toBeFalsy();
    expect(executed).toBeTruthy();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95LXN0YWNrLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZXBsb3ktc3RhY2sudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUF3QztBQUN4QyxrQ0FBb0M7QUFDcEMsK0NBQTJDO0FBRTNDLE1BQU0sVUFBVSxHQUFHLGdCQUFTLENBQUM7SUFDM0IsU0FBUyxFQUFFLGVBQWU7SUFDMUIsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFO0NBQzFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxnREFBZ0QsRUFBRSxLQUFLLElBQUksRUFBRTtJQUNoRSxRQUFRO0lBQ1IsTUFBTSxHQUFHLEdBQUcsSUFBSSxrQkFBTyxFQUFFLENBQUM7SUFFMUIsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBRXJCLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztRQUNyQixjQUFjO1lBQ1osT0FBTztnQkFDTCxNQUFNLEVBQUUsRUFBRTthQUNYLENBQUM7UUFDSixDQUFDO1FBRUQsZUFBZTtZQUNiLE9BQU8sRUFBRSxDQUFDO1FBQ1osQ0FBQztRQUVELGlCQUFpQjtZQUNmLE9BQU87Z0JBQ0wsTUFBTSxFQUFFLGlCQUFpQjtnQkFDekIsT0FBTyxFQUFFLEVBQUU7YUFDWixDQUFDO1FBQ0osQ0FBQztRQUVELGdCQUFnQjtZQUNkLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDaEIsT0FBTyxFQUFFLENBQUM7UUFDWixDQUFDO0tBQ0YsQ0FBQyxDQUFDO0lBRUgsT0FBTztJQUNQLE1BQU0sR0FBRyxHQUFHLE1BQU0saUJBQVcsQ0FBQztRQUM1QixLQUFLLEVBQUUsVUFBVTtRQUNqQixHQUFHO0tBQ0osQ0FBQyxDQUFDO0lBRUgsT0FBTztJQUNQLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDN0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQ2hDLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVwbG95U3RhY2sgfSBmcm9tICcuLi8uLi9saWInO1xuaW1wb3J0IHsgdGVzdFN0YWNrIH0gZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgeyBNb2NrU0RLIH0gZnJvbSAnLi4vdXRpbC9tb2NrLXNkayc7XG5cbmNvbnN0IEZBS0VfU1RBQ0sgPSB0ZXN0U3RhY2soe1xuICBzdGFja05hbWU6ICd3aXRob3V0ZXJyb3JzJyxcbiAgdGVtcGxhdGU6IHsgcmVzb3VyY2U6ICdub2Vycm9ycmVzb3VyY2UnIH0sXG59KTtcblxudGVzdCgnZG8gZGVwbG95IGV4ZWN1dGFibGUgY2hhbmdlIHNldCB3aXRoIDAgY2hhbmdlcycsIGFzeW5jICgpID0+IHtcbiAgLy8gR0lWRU5cbiAgY29uc3Qgc2RrID0gbmV3IE1vY2tTREsoKTtcblxuICBsZXQgZXhlY3V0ZWQgPSBmYWxzZTtcblxuICBzZGsuc3R1YkNsb3VkRm9ybWF0aW9uKHtcbiAgICBkZXNjcmliZVN0YWNrcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIFN0YWNrczogW11cbiAgICAgIH07XG4gICAgfSxcblxuICAgIGNyZWF0ZUNoYW5nZVNldCgpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9LFxuXG4gICAgZGVzY3JpYmVDaGFuZ2VTZXQoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBTdGF0dXM6ICdDUkVBVEVfQ09NUExFVEUnLFxuICAgICAgICBDaGFuZ2VzOiBbXSxcbiAgICAgIH07XG4gICAgfSxcblxuICAgIGV4ZWN1dGVDaGFuZ2VTZXQoKSB7XG4gICAgICBleGVjdXRlZCA9IHRydWU7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICB9KTtcblxuICAvLyBXSEVOXG4gIGNvbnN0IHJldCA9IGF3YWl0IGRlcGxveVN0YWNrKHtcbiAgICBzdGFjazogRkFLRV9TVEFDSyxcbiAgICBzZGssXG4gIH0pO1xuXG4gIC8vIFRIRU5cbiAgZXhwZWN0KHJldC5ub09wKS50b0JlRmFsc3koKTtcbiAgZXhwZWN0KGV4ZWN1dGVkKS50b0JlVHJ1dGh5KCk7XG59KTtcbiJdfQ==